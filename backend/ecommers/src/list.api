1. Count the total number of active users.
[
  {
    $match: {
      "isActive":true
    }
  },
  {
    $count: 'NoOfActive'
  }
]
2. Find the average age of male and female.
[
  {
    $group: {
      _id: "$gender",
     "AvgAge":{
       $avg:"$age"
     }
    }
  }
  
]
3. Give the total number of posts by active users.
[
  {
    $match: {
      "isActive":true
    }
  },
  {
    $unwind: {
      path: "$posts",
    }
  },{
    $group: {
      _id: "$_id",
      NoOfPost:{
        $sum:1
      }
    }
  }
]
4. Count the total number of comments.
[
  {
     $unwind: "$posts"
   },
   {
     $unwind: "$posts.comments"
   },
   {
     $group: {
       _id: "$_id",
       NoOfComment:{
         $sum:1
       }
     }
   }
 ]
5. List users and their total likes.
[
  {
    $unwind: "$posts"
  },
  {
    $group: {
      _id: "$_id",
      name:{$first:"$name"},        //for name

      NoOfLikes: {
        $sum:"$posts.likes"
      }
    }
  }
]
6. Find the user name with the maximum likes of posts.
[
  { "$unwind": "$posts" },
  {
    "$group": {
      "_id": "$name",
      "totalLikes": { "$sum": "$posts.likes" }
    }
  },
  { "$sort": { "totalLikes": -1 } },
  { "$limit": 1 }
]

7. Count the number of active and inactive users.
[
  {
    "$group": {
      "_id": "$isActive",
      "count": { "$sum": 1 }
    }
  }
]

8. List the cities with the highest average age.
[
  {
    "$group": {
      "_id": "$city",
      "averageAge": { "$avg": "$age" }
    }
  },
  {
    "$sort": { "averageAge": -1 }
  }
]

9. Count the number of users in each city.
[
  {
    "$group": {
      "_id": "$city",
      name:{$first:"$name"},
      "count": { "$sum": 1 }
    }
  }
]

10. Count the number of users with JavaScript skills.
[
  {
    "$match": {
      "skills": "JavaScript"
    }
  },
  {
    "$count": "totalUsersWithJavaScriptSkills"
  }
]

11. Count the number of users with each skill.

[
  { "$unwind": "$skills" },
  { 
    "$group": { 
      "_id": "$skills",
      "count": { "$sum": 1 }
    } 
  }
]

12. Find users who have posts with more than 15 likes and a specific skill.
[
  {
    $unwind:"$posts"
  },
  {
    $match: {
      $and:[
        {"posts.likes" : {$gt : 15}},
        {"skills":"React"}
      ]
    }
  }
]
13. Find users with the highest total number of likes across all posts.
[
  {
    "$unwind": "$posts"
  },
  {
    "$group": {
      "_id": "$_id",
      "name": { "$first": "$name" },
      "total_likes": { "$sum": "$posts.likes" }
    }
  },
  {
    "$sort": { "total_likes": -1 }
  },
  {
    "$limit": 1
  }
]

14. Find users who have friends and count the number of friends.
[
  {
    $match: {
      friends: {
        $exists: true,
        $not: { $size: 0 }
      }
    }
  },
  {
    $project: {
      name: 1,
      friendCount: { $size: "$friends" }
    }
  }
]


15. Find users who have at least one post with a specific comment and a specific skill.
[
  {
    $unwind: "$posts"
  },
  {
    $unwind: "$posts.comments"
  },
  {
    $match: {
      $and: [
        { "posts.comments": "specific comment" },
        { skills: "specific skill" }
      ]
    }
  }
]


16. Count users who have skills javascript and react.
[
  {
    $match: {
      skills: { $all: ["JavaScript", "React"] }
    }
  },
  {
    $count: "JavaScriptAndReactSkills"
  }
]


17. count user who have second skills as React.
[
  {
    $project: {
      secondSkill: {
        $arrayElemAt: ["$skills", 1]
      }
    }
  },
  {
    $match: {
      secondSkill: "React"
    }
  }
]

18. Categorise users by their city and gives their id and name.
[
  {
    $group: {
      _id: "$city",
      users: {
        $push: {
          _id: "$_id",
          name: "$name"
        }
      }
    }
  }
]


19. Give user data whose city name starts with "New".
 


20. Add a "postCount" field representing the total number of posts for each user.
[
  {
    $project: {
      name: 1,
      postCount: { $size: "$posts" }
    }
  }
]

21. Add a "friendNames" field with the names of friends for each user.
[
  {
    $lookup: {
      from: "users",
      localField: "friends",
      foreignField: "_id",
      as: "friendNames"
    }
  },
  {
    $project: {
      name: 1,
      "friendNames.name": 1
    }
  }
]

22. Display posts data that have more than 1 comments.
[
  {
    $unwind: "$posts"
  },
  {
    $project: {
      posts: 1,
      commentCount: { $size: "$posts.comments" }
    }
  },
  {
    $match: {
      commentCount: { $gt: 1 }
    }
  }
]

<--------------------------------------------------------------------->

1. Find the total number of active categories.

[
  {
    $match: {
      "isActive":true
    }
  },
  {
    $count: 'NoOfActive'
  }
]
---------------------------------------------------------------------

2. Retrieve the list of users who have made more than 3 orders. //order

[
  {
    $group: {
      _id:"$user_id",
     ordercount:{
       $sum:1
     }
      }
    },
  {
    $match: {
      ordercount:{
        $gt:1
      }
    }
  },
  {
    $lookup: {
      from: "users",
      localField: "_id",
      foreignField: "_id",
      as: "userdetails"
    }
  },
  {
     $unwind:"$userdetails"
  },
  {
    $project: {
      _id:0,
      "userdetails.name":1,
       "userdetails.mobile_no":1,
       "userdetails.email":1,
      ordercount:1,
   
      
    }
  }
 
]
---------------------------------------------------------------------
3. Calculate the total revenue generated by each seller.  // order
 [
  {
    $group: {
      _id: "$seller_id",
      total_revenue: {
        $sum: "$total_amount"
      }
    }
  },
  {
    $lookup: {
      from: "users",
      localField: "_id",
      foreignField: "_id",
      as: "sellerdetails"
    }
  },
  {
    $unwind: "$sellerdetails"
  },
  {
    $project: {
      _id: 0,
      "sellerdetails.name": 1,
      "sellerdetails.mobile_no": 1,
      "sellerdetails.email": 1,
      total_revenue: 1
    }
  }
]

---------------------------------------------------------------------
4. Retrieve the products with the highest average rating. // reviews
[
    {
      $group: {
        _id: "$product_id",
        averageRating: {
          $avg: "$rating"
            }
        }
    },
    {
      $sort: {
        averageRating: -1
        }
    },
    {
      $limit: 1
    },
    {
      $lookup: {
        from: "products",
        localField: "_id",
        foreignField: "_id",
        as: "productDetails"
        }
    },
    {
      $unwind: "$productDetails"
    },
    {
      $project: {
        _id: 0,
        productId: "$_id",
        productName: "$productDetails.name",
        averageRating: 1
        }
    }
]
---------------------------------------------------------------------
5. Calculate the total number of products in each subcategory . // products

[
  {
    $group: {
      _id: "$subcategory",
      allproducts: {
        $sum: 1
      }
    }
  },
  {
    $project: {
      _id: 0,
      subcategory: "$_id",
      allproducts: 1
    }
  }
]
---------------------------------------------------------------------

6. Find the users who have not made any orders. //user
[
  {
    $lookup: {
      from: "orders",
      localField: "_id",
      foreignField: "user_id",
      as: "orders"
    }
  },
  {
    $match: {
      orders: {
        $size: 0
      }
    }
  }
]
---------------------------------------------------------------------

7. Identify the most popular product (highest number of reviews). //reviews
[
  {
    $lookup: {
      from: "reviews",
      localField: "_id",
      foreignField: "product_id",
      as: "reviews"
    }
  },
  {
    $addFields: {
      reviewsCount: { $size: "$reviews" }
    }
  },
  {
    $sort: {
      reviewsCount: -1
    }
  },
  {
    $limit: 1
  },
  {
    $project: {
      _id: 0,
      name: 1,
      reviewsCount: 1,
      reviews: {
        $slice: ["$reviews", 5]
      }
    }
  }
]
---------------------------------------------------------------------
7.1 Identify the most popular product (highest number of orders). //order
[
  {
    $unwind: "$products"
  },
  {
    $group: {
      _id: "$products.product_id",
      ordersCount: { $sum: "$products.quantity" }
    }
  },
  {
    $sort: {
      ordersCount: -1
    }
  },
  {
    $limit: 5
  },
  {
    $lookup: {
      from: "products",
      localField: "_id",
      foreignField: "_id",
      as: "product"
    }
  },
  {
    $unwind: "$product"
  },
  {
    $project: {
      _id: 0,
      name: "$product.name",
      ordersCount: 1
    }
  }
]
---------------------------------------------------------------------
8. Calculate the total revenue and average order value for each seller. // order 
[
  {
    $group: {
      _id: "$seller_id",
      totalRevenue: {
        $sum: "$total_amount"
      },
      averageOrderValue: {
        $avg: "$total_amount"
      },
      orderCount: {
        $sum: 1
      }
    }
  },
  {
    $lookup: {
      from: "users",
      localField: "_id",
      foreignField: "_id",
      as: "sellerDetails"
    }
  },
  {
    $unwind: "$sellerDetails"
  },
  {
    $project: {
      _id: 0,
      seller_id: "$_id",
      seller_name: "$sellerDetails.name",
      totalRevenue: 1,
      averageOrderValue: 1,
      orderCount: 1
    }
  }
]

---------------------------------------------------------------------
9. Find the products with a quantity less than 20 in the Variant collection. // veriant

[
  {
    $match: {
      "attributes.Quantity": {
        $lt: 20
      }
    }
  },
  {
    $project: {
      _id: 1,
      product_id: 1,
      "attributes.Color": 1,
      "attributes.Size": 1,
      "attributes.Price": 1,
      "attributes.Quantity": 1
    }
  }
]
---------------------------------------------------------------------
10. Retrieve the top 5 customers with the highest total order value. //order
[
  {
    $group: {
      _id: "$user_id",
      totalOrderValue: {
        $sum: "$total_amount"
      }
    }
  },
  {
    $sort: {
      totalOrderValue: -1
    }
  },
  {
    $limit: 5
  },
  {
    $lookup: {
      from: "users",
      localField: "_id",
      foreignField: "_id",
      as: "orders"
    }
  },
  {
    $unwind: "$orders"
  },
  {
    $project: {
      _id: 0,
      user_id: "$_id",
      totalOrderValue: 1,
      "orders.name": 1,
      "orders.email": 1,
      "orders.address": 1,
      "orders.mobile_no": 1
    }
  }
]


---------------------------------------------------------------------
11. Find the average rating for each product. //review
[
  {
    $group: {
      _id: "$product_id",
      avg_rating: {
        $avg: "$rating"
      }
    }
  },
  {
    $lookup: {
      from: "products",
      localField: "_id",
      foreignField: "_id",
      as: "product_details"
    }
  },
  {
    $unwind: "$product_details"
  },
  {
    $project: {
      _id: "$_id",
      product_name: "$product_details.name",
      avg_rating: 1
    }
  }
]

---------------------------------------------------------------------
12. Retrieve the latest 5 reviews with user details. // review

[
  {
    $sort: { _id: -1 }
  },
  {
    $limit: 5
  },
  {
    $lookup: {
      from: "users",
      localField: "user_id",
      foreignField: "_id",
      as: "user_details"
    }
  },
  {
    $unwind: "$user_details"
  },
  {
    $project: {
      _id: 1,
      product_id: 1,
      rating: 1,
      comment: 1,
      "user_details.name": 1,
      "user_details.email": 1
    }
  }
]

--------------------------------------------------------------------- 
13. Identify the users who have items in their cart with a quantity greater than 5.  //cart
[
  {
    $unwind: "$items"
  },
  {
    $group:{
      _id: "$user_id",
      "countQty":{
        $sum: "$items.quantity"
      }
    }
  },
  {
    $match: {
      "countQty": { $gt: 3 }
    }
  },
  {
    $lookup: {
      from: "users",
      localField: "_id",
      foreignField: "_id",
      as: "user"
    }
  },
  {
    $unwind: "$user"
  },
  {
    $project: {
      _id: 0,
      "countQty":1,
      "user.name":1,
      
     
      
    }
  }
]

---------------------------------------------------------------------

14. Calculate the total number of orders placed using each payment gateway. // payment

  [
    {
      $group: {
        _id: "$gateway",
        total_orders: { $sum: 1 }
      }
    }
  ]

---------------------------------------------------------------------
15. Find the subcategories with no active products. //subcategories

[
  {
    $lookup: {
      from: "products",
      localField: "_id",
      foreignField: "subcategory_id",
      as: "products"
    }
  },
  {
    $unwind: "$products"
  },
  {
    $match: {
      "products.isActive": false
    }
  },
  {
    $group: {
      _id: "$_id",
      subcategory_name: {
        $first:"$subcategory_name"
      },
      products:{
      $push:"$products"
      }
    }
  },
  
]
---------------------------------------------------------------------
16. Retrieve the orders with a total amount greater than 2000 and status as "Completed."

[
  {
    "$match": {
      status:"Completed",
      total_amount: { "$gt": 2000 }
      
    }
  }
]


---------------------------------------------------------------------
17. Identify the products that have not been reviewed.
[
  {
    "$lookup": {
      "from": "reviews",
      "localField": "_id",
      "foreignField": "product_id",
      "as": "reviews"
    }
  },
  {
    "$match": {
      "reviews": { "$size": 0 }
    }
  },
  {
    "$project": {
      "_id": 1,
      "name": 1,
      "description": 1
    }
  }
]


---------------------------------------------------------------------
18. Calculate the total revenue and total quantity sold for each product. 

[
  {
    "$group": {
      "_id": "$product_id",
      "total_revenue": { "$sum": "$total_amount" },
      "total_quantity": { "$sum": "$quantity" }
      }
      }
      ]


---------------------------------------------------------------------
19. Find the top 3 subcategories with the highest average product price.  
[
  {
    $lookup: {
      from: "variants",
      localField: "_id",
      foreignField: "product_id",
      as: "variant"
    }
  },
  {
    $unwind: {
      path: "$variant",
    }
	},
  {
    $group: {
      _id: "$subcategory_id",
      "AvgPrice": {
        $avg: "$variant.attributes.Price"
      }
    }
  },
  {
    $sort: {
      "AvgPrice": -1
    }
  }, 
  {
    $limit: 3
  },
  {
    $project: {
      "_id" : 0,
      "subcategory_id" : "$_id",
      "AvgPrice": 1,
      
    }
  }
  
]


{
  "AvgPrice": 1999.99,
  "subcategory_id": 2
}
{
  "AvgPrice": 1099.99,
  "subcategory_id": 1
}
{
  "AvgPrice": 899.99,
  "subcategory_id": 7
}




[
  {
    $group: {
      _id: "$subcategory_id",
      "variant_id" : {$push : "$variant_id"}
    }
  },
  {
    $lookup: {
      from: "variants",
      localField: "variant_id",
      foreignField: "_id",
      as: "variant"
    }
  },
  {
    $unwind: {
      path: "$variant"
    }
  },
  {
    $group: {
      _id: "$_id",
      "AvgAmount": {
        $avg: "$variant.attributes.Price"
      }
    }
  },
  {
    $sort: {
      "AvgAmount": -1 
    }
  },
  {
    $limit: 3
  },
  {
    $lookup: {
      from: "subcategories",
      localField: "_id",
      foreignField: "_id",
      as: "subcategory"
    }
  },
  {
    $unwind: {
      path: "$subcategory"
    }
  },
  {
    $project: {
      "subcategory_name" : "$subcategory.subcategory_name",
      "AvgAmount" : 1
    }
  }
  
]

{
  "_id": 2,
  "AvgAmount": 1199.99,
  "subcategory_name": "Laptops"
}
{
  "_id": 1,
  "AvgAmount": 1049.99,
  "subcategory_name": "Smartphones"
}
{
  "_id": 3,
  "AvgAmount": 1009.99,
  "subcategory_name": "T-Shirts"
}

--------------------------------------------------------------------------------------------------
20. Retrieve the products that have received reviews with ratings greater than 4. //review

[
  {
    $lookup: {
      from: "reviews",
      localField: "_id",
      foreignField: "product_id",
      as: "review"
    }
  },
  {
    $match: {
      "review.rating" : {$gt : 4}
    }
  },
  {
    $project: {
      "name" : 1,
      "review": 1
    }
  }
  
]


{
  "_id": 1,
  "name": "iPhone 12",
  "review": [
    {
      "_id": 1,
      "user_id": 1,
      "product_id": 1,
      "rating": 4.5,
      "comment": "Great phone, fast and reliable!"
    },
    {
      "_id": 2,
      "user_id": 2,
      "product_id": 1,
      "rating": 5,
      "comment": "Excellent build quality and camera performance"
    }
  ]
}
{
  "_id": 9,
  "name": "Leather Sofa",
  "review": [
    {
      "_id": 10,
      "user_id": 10,
      "product_id": 9,
      "rating": 4.5,
      "comment": "Quality sofa, very comfortable"
    }
  ]
}
{
  "_id": 3,
  "name": "MacBook Pro",
  "review": [
    {
      "_id": 4,
      "user_id": 4,
      "product_id": 3,
      "rating": 4.8,
      "comment": "Impressive performance, but a bit expensive"
    }
  ]
}
{
  "_id": 8,
  "name": "To Kill a Mockingbird",
  "review": [
    {
      "_id": 9,
      "user_id": 9,
      "product_id": 8,
      "rating": 4.5,
      "comment": "Well-written, highly recommended"
    }
  ]
}
{
  "_id": 5,
  "name": "V-Neck T-Shirt",
  "review": [
    {
      "_id": 6,
      "user_id": 6,
      "product_id": 5,
      "rating": 4.2,
      "comment": "Comfortable and stylish"
    }
  ]
}
{
  "_id": 6,
  "name": "Slim Fit Jeans",
  "review": [
    {
      "_id": 7,
      "user_id": 7,
      "product_id": 6,
      "rating": 4.7,
      "comment": "Love the fit and color of these jeans"
    }
  ]
}
--------------------------------------------------------------------------------------------------
21. Retrieve product data with their variant details from category.  //
[
  {
    $lookup: {
      from: "products",
      localField: "_id",
      foreignField: "category_id",
      as: "product",
      pipeline : [
        {
           $lookup: {
              from: "variants",
              localField: "_id",
              foreignField: "product_id",
              as: "variant"
           }
        },
        {
					$unwind : "$variant"          
        },
        {
          $group : {
            _id : "$_id",
            variant : {$push : "$variant.attributes"}
          }
        }
      ]
    }
  },
  {
    $match: {
      "product" : {$ne : []}
    }
  },
  {
    $project: {
      "category_name" : 1,
      "product": 1
    }
  }
]


{
  "_id": 1,
  "category_name": "Electronics",
  "product": [
    {
      "_id": 3,
      "variant": [
        {
          "Color": "Space Gray",
          "Size": "15-inch",
          "Price": 1999.99,
          "Quantity": 20
        }
      ]
    },
    {
      "_id": 2,
      "variant": [
        {
          "Color": "Silver",
          "Size": "256GB",
          "Price": 1199.99,
          "Quantity": 40
        }
      ]
    },
    {
      "_id": 1,
      "variant": [
        {
          "Color": "Black",
          "Size": "64GB",
          "Price": 999.99,
          "Quantity": 50
        },
        {
          "Color": "White",
          "Size": "128GB",
          "Price": 1099.99,
          "Quantity": 30
        }
      ]
    }
  ]
}

{
  "_id": 2,
  "category_name": "Clothing",
  "product": [
    {
      "_id": 5,
      "variant": [
        {
          "Color": "Blue",
          "Size": "L",
          "Price": 24.99,
          "Quantity": 80
        }
      ]
    },
    {
      "_id": 6,
      "variant": [
        {
          "Color": "Dark Indigo",
          "Size": "32",
          "Price": 49.99,
          "Quantity": 60
        }
      ]
    },
    {
      "_id": 4,
      "variant": [
        {
          "Color": "Black",
          "Size": "M",
          "Price": 19.99,
          "Quantity": 100
        }
      ]
    }
  ]
}
{
  "_id": 3,
  "category_name": "Books",
  "product": [
    {
      "_id": 7,
      "variant": [
        {
          "Color": "Paperback",
          "Size": "Standard",
          "Price": 9.99,
          "Quantity": 120
        }
      ]
    },
    {
      "_id": 8,
      "variant": [
        {
          "Color": "Hardcover",
          "Size": "Large",
          "Price": 14.99,
          "Quantity": 90
        }
      ]
    }
  ]
}
{
  "_id": 4,
  "category_name": "Furniture",
  "product": [
    {
      "_id": 9,
      "variant": [
        {
          "Color": "Brown",
          "Size": "3-Seater",
          "Price": 899.99,
          "Quantity": 15
        }
      ]
    }
  ]
}
--------------------------------------------------------------------------------------------------
22. Retrieve Categories with Subcategory, Products with product count. // 

[
  {
    $lookup: {
      from: "subcategories",
      localField: "_id",
      foreignField: "category_id",
      as: "subcategory",
      pipeline : [
        {
          $lookup: {
            from: "products",
            localField: "_id",
            foreignField: "subcategory_id",
            as: "product"
          }
        },
        {
          $unwind : "$product"
        },
        {
          $group : {
            _id : "$_id",
            "subcategory_name" : {$first : "$subcategory_name"},
            "product_name": {$push : "$product.name"},
            "CountProduct" : {
              $sum : 1
            }
          }
        }
      ]
    }
  },
  {
    $match: {
      "subcategory" : {$ne : []}
    }
  }
]



{
  "_id": 2,
  "category_name": "Clothing",
  "category_desc": "Apparel and accessories",
  "isActive": true,
  "subcategory": [
    {
      "_id": 4,
      "subcategory_name": "Jeans",
      "product_name": [
        "Slim Fit Jeans"
      ],
      "CountProduct": 1
    },
    {
      "_id": 3,
      "subcategory_name": "T-Shirts",
      "product_name": [
        "Cotton T-Shirt",
        "V-Neck T-Shirt"
      ],
      "CountProduct": 2
    }
  ]
}
{
  "_id": 3,
  "category_name": "Books",
  "category_desc": "Reading materials",
  "isActive": true,
  "subcategory": [
    {
      "_id": 5,
      "subcategory_name": "Fiction",
      "product_name": [
        "To Kill a Mockingbird",
        "The Great Gatsby"
      ],
      "CountProduct": 2
    }
  ]
}
{
  "_id": 3,
  "category_name": "Books",
  "category_desc": "Reading materials",
  "isActive": true,
  "subcategory": [
    {
      "_id": 5,
      "subcategory_name": "Fiction",
      "product_name": [
        "To Kill a Mockingbird",
        "The Great Gatsby"
      ],
      "CountProduct": 2
    }
  ]
}
{
  "_id": 4,
  "category_name": "Furniture",
  "category_desc": "Home and office furniture",
  "isActive": true,
  "subcategory": [
    {
      "_id": 7,
      "subcategory_name": "Living Room",
      "product_name": [
        "Leather Sofa",
        "Coffee Table"
      ],
      "CountProduct": 2
    }
  ]
}




--------------------------------------------------------------------------------------------------
23. Retrieve Payments with Order and Product Details. // 
[
  {
    $unwind: {
      path: "$products"
    }
  },
  {
    $lookup: {
      from: "products",
      localField: "products.product_id",
      foreignField: "_id",
      as: "product"
    }
  },
  {
    $unwind: {
      path: "$product"
    }
  },
  {
    $group: {
      _id: "$_id",
      "payment_id": {
        $first : "$payment_id"
      },
      "product" : {
        $push : "$product"
      }
    }
  },
  {
    $lookup: {
      from: "payments",
      localField: "payment_id",
      foreignField: "_id",
      as: "payment"
    }
  },
  {
    $unwind: {
      path: "$payment"
    }
  },
  {
    $project: {
      "gatway" : "$payment.gateway",
      "status" : "$payment.status",
      "payment_id": "$payment_id",
      "product" : 1
    }
  }
  
]


{
  "_id": 10,
  "product": [
    {
      "_id": 1,
      "category_id": 1,
      "subcategory_id": 1,
      "variant_id": 1,
      "name": "iPhone 12",
      "description": "Flagship smartphone",
      "isActive": true
    },
    {
      "_id": 10,
      "category_id": 4,
      "subcategory_id": 7,
      "variant_id": 10,
      "name": "Coffee Table",
      "description": "Functional and stylish",
      "isActive": true
    }
  ],
  "gatway": "PayPal",
  "status": "Pending",
  "payment_id": 110
}
% as sem other data....
-------------------------------------------
//products
1.the product using (sortOrder, rating, max, min, category, page = 1, limit = 10) //

[
  {
    $lookup: {
      from: 'variants',
      localField: '_id',
      foreignField: 'product_id',
      as: 'variant'
    }
  },
  {
    $lookup: {
      from: 'reviews',
      localField: '_id',
      foreignField: 'product_id',
      as: 'review'
    }
  },
  {
    $addFields: {
      avgrating:'$review.rating'
    }
  },
  {
    $unwind: {
      path: '$variant',
      
    }
  },
  {
    $match: {
     	avgrating:{$gte:4},
      category_id:1,
      'variant.attributes.Price':{$gte:0 , $lte:2000}
    }
  },
  {
    $group: {
      _id: '$_id',
      name:{$first:'$name'},
     variant:{$push:"$variant"},
      review:{$push:"$review"}
      }
  },
  {
    $sort: {
      name:1
    }
  },
  {
    $skip: 0
  },
  {
    $limit: 10
  }
]